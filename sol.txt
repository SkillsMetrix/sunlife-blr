import { useDispatch, useSelector } from "react-redux";
import React, { useEffect } from "react";
import { fetchUsers, userDeleted } from "../redux/restSlice";

function UserList(props) {
  const dispatch = useDispatch();
  const usersData = useSelector((state) => state.rest.entities);

 
  return (
    <div>
      <p>User Data</p>
      <button onClick={()=>dispatch(fetchUsers())}>Load Users</button>
      <div>
        <table class="table">
          <thead>
            <tr>
              <th scope="col">#</th>
              <th scope="col">Name</th>
              <th scope="col">Email</th>
            </tr>
          </thead>
          <tbody>
            {usersData.map((data) => (
              <tr>
                <td>{data.id}</td>
                <td>{data.name}</td>
                <td>{data.email}</td>
                <td><button onClick={()=> dispatch(userDeleted(data.id))}>Delete</button></td>
              
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
}

export default UserList;
----



import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'

export const fetchUsers=createAsyncThunk('users/fetchUsers',async()=> {

    const response= await fetch('https://jsonplaceholder.typicode.com/users')
    const users=await response.json()
    return users
 })
 const usersSlice=createSlice({
    name:"users",
    initialState:{
        entities:[],
        loading:false
    },
    reducers:{
        usersAdded(state,action) {
            state.entities.push(action.payload)
        },
        userDeleted(state,action){
        const id =action.payload
         const userAvailable=state.entities.find((user) => user.id === id)
        if(userAvailable){
            state.entities= state.entities.filter((user)=>user.id !==id)
        }
        }
    },
    extraReducers:{
        [fetchUsers.pending]:(state,action)=>{
            state.loading=true
        },
        [fetchUsers.fulfilled]:(state,action)=>{
            state.loading=false
            state.entities=[...state.entities,...action.payload]
        }
    }
 })
export const{usersAdded,userDeleted}= usersSlice.actions
export default usersSlice.reducer


--------

import React, { useState } from "react";
import { useDispatch, useSelector } from 'react-redux'
import { usersAdded } from "../redux/restSlice";
function AddUser(props) {
  const dispatch= useDispatch()
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");

  const dataLength=useSelector(state=> state.rest.entities.length)


  const addUser = (e) => {
    e.preventDefault();
    dispatch(usersAdded({id:dataLength+1,name,email}))
    setName('')
    setEmail('')
  };
  return (
    <div>
     
      <form onSubmit={addUser}>
        UserName:{" "}
        <input
          type="text"
          value={name}
          onChange={(e) => setName(e.target.value)}
        />
        Email:
        <input type="email" 
        value={email}
        onChange={(e) => setEmail(e.target.value)}
        />
        <button className="btn btn-primary">Add User</button>
      </form>
    </div>
  );
}

export default AddUser;
